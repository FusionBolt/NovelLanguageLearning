-- Haskell Playground 1.0
:t f1
:t f2
:t f3

f2 5 2
-- f2 = 5 * 100 * 3 + 2
f3 5
-- f3 = 5 * 100 + (5 + 3)
-- f3 = 5 * (100 + 3)
f 2 6
-- 2*3 + 6
:t f
f <*> (*100)

-- fmap
-- from right to left
-- 右边的结果是左边的参数

val = (\x y z -> [x,y,z]) <$> (+3) <*> (*2) <*> (/2) $ 5 
val
-- 类比于 (+) <$> (*3) <*> (*100)

ff2 = (+) <$> (*3) <$> (+100)
ff = ff2 10
ff 2

-- (+) <$> (+3) <*> (*100)，我们是在实作一个函数，他会将 (+3) 跟 (*100) 的结果再套用 +

test_v = Test [1,2,3]
ffff test_v

getZipList $ (+) <$> ZipList [1,2,3] <*> ZipList [4,5,6]
(+) <$> [1,2,3] <*> [4,5,6]

liftA2 (+) (Just 1) (Just 2)
(+) <$> (Just 1) <*> (Just 2)

liftA2 (:) (Just 1) (Just [4])

sequenceA [[1,2,3]]
sequenceA [[1,2,3],[4,5,6]]
